<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAM8AAABSCAYAAADzeYDCAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DQAACw0B7QfALAAACYBJREFUeF7tnT9y3DYYxfcIuoF9BB1BR9ANohtYN5A8kyKd1CWd1CWd3MWd0rlU
        6VJlSpUpFT59gHYXeAABEEtxOe+380b2EgAJ4nsECP7ZjRBCCCGEEEIIIYQQQgghhBBCCCGEEEIIsViu
        N2eDHge9DHpdkVCnC1dLITrzdXMVBNz6hDoK0RUclVmwrVNnrtZCdMCGNSzQ1qhHV2shOsCDbK16cbVe
        DnauuavPbolYPDzI1qslAaPE26jJjaMhbrx1a0nIPEdO3Hjr1pKQeY6cuPGa9fn287vY8px8vtPfT1/P
        7s721FJeUktC5jly4sZr1st/L6+H5Onfp9e7p7vX8z/PX09+O6HbMKolIfMcOXHjNQnBPDcwUnWvtCRk
        niMnbrwmnd2fuZCen5sfN+U9USnXm5NBmDq+GfQw6GnQs/uLa2P4HheY66aWrzfnLt/F5mpzOfwNt/Fu
        kC2PdepKKQf1sPWgXGw36gDh36gXPtMuHsfbGZe33Ze72+C3A9/3v4Adt+HuOqF03bGv43qduKWOuPGa
        dPrH6VtPcP14/ab7p/vX55dnF94cDPOQx+vx+fFNY/kYyFPUC42BHWS3K9Xc44fALDORNRoro0TXrpRx
        LGhq1vXs6l1/nSku684twTIcLBCwYRompJve89a3YbxeM9Z+ul83n9xSR5igoxDMOc7/Oqf5vGDIy++X
        b4YqochAOb5uvgxpptwYe+NKSnNo89hQcMo66gM4LsPMY0f8cFmJ0EsER/lCzKytbbg9CH60eaBc4GOo
        x/IwwRTozcbApALL/64U7Q0dCsO6dMMf0jw21Cg9yudVcyNtnB9BOHV/5vcjw3obVlaNsP9wAPp48+QC
        vsY8XsgzNqzDsJHlfRMjvdNxBMMHQWkNib/4v51HpAI13fA2nLIxdM9zHmvw1BH30a0L60Y6yI/pcZRn
        ecoNFOcNt8PvR1u/5cE24P/3g1L7cTv8G8NGDawMCO2xXf94/X36/e/nNs/tj1sX0jGfbj/RPGNCL5Sb
        Fsey5ARCiO1Alrbs/MLys8YvGcKhEcN89WN+K4dtA74bPxG3/NxEMN0YLN9Wt4PyPUhu/eXbz/LCtOP7
        0/KHI4L4QLQk8zRfqxk0Nrt3+fclzedqbaSDrnbMnyon3/C80VvMg94qLAfbUzsTGB9tLYjGgj/M41U+
        wQH4kHb8TnjrKcJ8veq/1ZKGbSx9jXLnU99+fqN5XK0NPmyqa3CPDQnCsvIN38M8vIz6wPFYTxGWN3au
        FaaHnt3ScmxIHB/xc+a1CYIwfe/6m9Zknlzvg6Eby+NqbdhO3l1e3+C72Ph9tzwo1/A9zMN6nfrey8MD
        ON/77Kf1atsGfvQ/d0tjeG81tf5hXJiWYh6c9LP0tcqd+9BhoYf3FO07HdSW2cc8YaBPOwAAFsC5c58w
        LdQK24epdVug76ftUX8+IlmfeXJDN1wnivJ4+A6qv4K/C2/M9IzRVPNws966pe3U1yNM2/7ELl83r9Nh
        6x8PH5diHgQ9S1+r3LCQToV74tmdPk+Zxl1+OpCmmocfAPrc5hLXI31E308HfXNL2ogDlxuXD/F61T8e
        Dq7NPLimk2LEPGxqEt9N1W6ZUC7opvY88clt1MCNsKnjFGG6XC9VQmzclHnYyX1+ZrCUon0bJuisjzRP
        dtgWN9ChdEjzxBMUvaiZ/IjTzWWeQ9Y/7tWWYp7kVHKlcuZh6V2tWQMdSk9ujTEyD0fmMaXMg7uoWfpa
        pS7CJu9x8/ALa4fQ4c55agK8lprADNN9pHn61X/95knNtsFULL2rNeodjumnT3HWMt08BQ3cSHz+lp5Q
        2U8HzWWeec/5lmKeZHBXKnWTaPLRBE+84+d/p9t087D78srz54hnvHI96G46aC7zHLL+8bB+KebJ3vlc
        qNTzQtnJCA/f8X2mOUuZbh6Wf1rggtrrJ3HauczD6t9+jcljd1yH5a7LPNf/8MmC7ANxHoyN4+XTLrCZ
        IcNP+h6rqeYBcaChx5g27udT7ukDS5x2HvMA1kPk9nkJWF9c5nrMg1tv2JBt9FxqFzaub93xZoS6QO5j
        HnzCMsYfh0jBe+T8+WCcfk7zsPpPucOBtYlpKeZJPjJQqKt/rlxJW2CmbK8D7cKHJ207nh+t8kHEGip3
        DxnDetDw/AQPsv3iUpRj2xOXNWboOP2c5knVv/4nZfgBcKulmOfi4YKmL9GX719cKVtwg+iocaAQ/hAW
        visf+vAnUct6sThfvXlTNzLWGNEOJCxwxo3QkidHjXlAqv41BhozDnTs5mHGAWMvE3lXiB252E7Dd2NH
        XOxwZr7ywGXnF2bGuvMWVo4JPWLu8W2Yho/xbR+0HADmNQ9I1x9l5R5pSL1pJ94nSzrnqXmSFL0Ku6aD
        Hofew5YSI3/UwfcwCD7+vQN4uUWqsaDyB+r4mN0L694qZ0g7COQu/Pp6YNshBAe+Y2khLCs7/4vzfoR5
        xnoOmANttlv/1P7yn/3vl2IeD4Ifpnj4+fBmKLxKF++nhrFgGJwbpS6EFp3jhEoxvvNLVfvocarnYxp7
        ohNlsavutUJQlU+cxPnnNw/o0Yb+AHUM5mkFF1mb3oGQw4KP3albIjRa23Wi8kYvM6bNmLUEEY7OdeYH
        cTkfYx4PC/xx7bcfK+PYzYNeqGqYFqoEC2YcwUsCEEOBuunlFBb0GFqlhxM1WHm54aUX0uDTdn0oLu9j
        zQPK29C/lmu/7msxD4ZnuCBKHzGoVS3WCDiptgugtqPx7+273JaO9ahWB2z/tg747jjqMAVrq3NXb3xQ
        d7w4ZGLdWYB1VMo8uJiJc5yULr5dvM2gNQ3NchKiGyzAOiplntYXHk6WEN1gAdZRMo9YLyzAOkrmEeuF
        BVhHyTxivbAA6yiZR6wXFmAdJfOI9cICrKNS5mFpZ5EQ3WAB1lEyj1gvLMA6SuYR64UFWEelzNP9zoFS
        CdENFmAdhUcNGJowEMcPC7COSj2LI/OI44cFWEelfnxq0mMFUyREN1iAdRLeU5Bi6ttzmiVEN9hrezoI
        j1LnfvIQwzmW7+ASohtlTxqOCrNnMMzV41XyPCcED7nd/Lh5f4YH/8ZzPphkYOvooOmvYhXiHXuakAVa
        lRD8vUj+PMh09XlcWoh32PPalUpNSbfQ64evAtW/2EKIIuy57uYhXOlQrYSOkwn+XV3z/vqBEDUMMY9x
        2+UgTLGdDzobhN8A8cq+bGEn3elYWiGEEEIIIYQQQgghhBBCCCGEEELMymbzP7FBm6chK3T3AAAAAElF
        TkSuQmCC
</value>
  </data>
</root>